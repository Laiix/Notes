1、一个程序被加载到内存当中运作，那么在内存内的那个数据就被称为进程(process)。进程是操作系统上非常重要的概念，
所有系统上面跑的数据都会以进程的型态存在。
2、什么是进程(process)和程序(program)
	1-在Linux系统当中：『触发任何一个事件时，系统都会将他定义成为一个进程，并且给予这个进程一个ID，称为PID，同时依据启发这个进程的用户与相关属性关系，给予这个PID 一组有效的权限设定。』
	2-程序一般是放置在实体磁盘中，然后透过用户的执行来触发。触发后会加载到内存中成为一个个体，那就是进程。为了操作系统可管理这个进程，因此进程有给予执行者的权限/属性等参数，并包括程序所需要的脚本与数据或文件数据等， 最后再给予一个 PID 。系统就是透过这个PID来判断该process 是否具有权限进行工作。
	3-总结：
 		1）程序(program)：通常为binary program ，放置在储存媒体中(如硬盘、光盘、软盘、磁带等)， 为实体文件的型态存在；
		2）进程(process)：程序被触发后，执行者的权限与属性、程序的程序代码与所需数据等都会被加载内存中， 操作系统并给予这个内存内的单元一个标识符(PID)，可以说，进程就是一个正在运作中的程序。
3、子进程与父进程：
	1-当我们登入系统后，会取得一个bash的shell，然后，我们用这个bash提供的接口去执行另一个指令，例如/usr/bin/passwd或者是touch等等，那些另外执行的指令也会被触发成为PID ，后来执行指令才产生的PID 就是『子进程』了，而在我们原本的bash环境下，就称为『父进程』
	2-子进程可以取得父进程的环境变量
	3-常常会发现：明明我将有问题的进程关闭了，过一阵子他又自动产生，而且新产生的那个进程的PID与原先的还不一样，如果不是crontab工作排程的影响，肯定有一支父进程存在，所以你杀掉子进程后， 父进程就会主动再生一支！那怎么办？找出那支父进程，然后将他删除
4、fork and exec：进程呼叫的流程
	子进程与父进程之间的关系还挺复杂的，最大的复杂点在于进程互相之间的呼叫。在Linux 的进程呼叫通常称为fork-and-exec 的流程！进程都会藉由父进程以复制(fork) 的方式产生一个一模一样的子进程， 然后被复制出来的子进程再以 exec 的方式来执行实际要进行的程序，最终就成为一个子进程的存在：
		(1)系统先以fork 的方式复制一个与父进程相同的暂存进程，这个进程与父进程唯一的差别就是PID不同！但是这个暂存进程还会多一个 PPID 的参数，PPID 如前所述，就是父进程的进程标识符
		(2)暂存进程开始以exec的方式加载实际要执行的程序，新的程序名称为xxx ，最终子进程的程序代码就会变成xxx 了！
5、系统或网络服务：常驻在内存的进程
	常驻在内存当中的进程通常都是负责一些系统所提供的功能以服务用户各项任务，因此这些常驻程序就会被我们称为：服务(daemon)。系统的服务非常的多，不过主要大致分成系统本身所需要的服务，例如刚刚提到的crond 及atd ，还有rsyslogd 等等的。还有一些则是负责网络联机的服务，例如Apache, named, postfix, vsftpd... 等等的。这些网络服务程序被执行后，他会启动一个可以负责网络监听的端口口(port) ，以提供外部客户端(client) 的联机要求。
6、Linux 的多人多任务环境
	Linux 底下执行一个指令时，系统会将相关的权限、属性、程序代码与数据等均加载内存，并给予这个单元一个进程标识符 (PID)，最终该指令可以进行的任务则与这个PID的权限有关。根据这个说明，我们就可以简单的了解，为什么Linux 这么多用户，但是却每个人都可以拥有自己的环境
	1-多人环境：
		Linux 最棒的地方就在于他的多人多任务环境！那么什么是『多人多任务』？在Linux 系统上面具有多种不同的账号， 每种账号都有都有其特殊的权限，只有一个人具有至高无上的权力，那就是root (系统管理员)。除了root 之外，其他人都必须要受一些限制的！而每个人进入Linux 的环境设定都可以随着每个人的喜好来设定(~/.bashrc)！现在知道为什么了吧？因为每个人登入后取得的shell 的PID 不同
	2-多任务行为：
		Linux 可以让CPU 在各个工作间进行切换， 也就是说，其实每个工作都仅占去CPU 的几个指令次数，所以CPU 每秒就能够在各个进程之间进行切换！CPU 切换进程的工作，与这些工作进入到CPU 运作的排程(CPU 排程，非crontab 排程) 会影响到系统的整体效能！ 目前 Linux 使用的多任务切换行为是非常棒的一个机制，几乎可以将PC 的性能整个压榨出来！ 由于效能非常好，因此当多人同时登入系统时，其实会感受到整部主机好像就为了你存在一般
	3-多重登入环境的七个基本终端窗口：
		在 Linux 当中，默认提供了六个文字界面登入窗口，以及一个图形界面，你可以使用[Alt]+[F1].....[F7]来切换不同的终端机界面，而且每个终端机界面的登入者还可以不同人！ Linux 默认会启动六个终端机登入环境的程序，所以我们就会有六个终端机接口。
	4-特殊的进程管理行为：
		Linux 几乎可以说绝对不会当机的！因为他可以在任何时候，将某个被困住的进程杀掉，然后再重新执行该进程而不用重新启动。如果Linux下以文字界面登入，在屏幕当中显示错误讯息后就挂了～动都不能动，该如何是好！？ 这个时候那默认的七个窗口可以随意的再按[Alt]+[F1].....[F7] 来切换到其他的终端机界面，然以ps -aux 找出刚刚的错误进程，然后给他 kill
	5-bash 环境下的工作管理(job control)
		单一的bash 接口下，可以进行多个工作
			$ cp file1 file2 &
	6-多人多任务的系统资源分配问题考虑：
		多人多任务确实有很多的好处，但其实也有管理上的困扰，因为使用者越来越多，当使用者达到一定的人数后， 通常你的机器便需要升级了，因为CPU 的运算与RAM 的大小可能就会不敷使用！