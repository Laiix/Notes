1、查询使用者： w, who, last, lastlog
	id, finger等指令查询一个用户的相关数据，那么想要知道使用者到底啥时候登入呢？ 最简单可以使用last检查，在第十章bash提过。早期的Red Hat系统的版本中，last 仅会列出当月的登入者信息，不过在我们的CentOS5.x版以后，last可以列出从系统建立之后到目前为止的所有登入者信息！这是因为登录档轮替的设定不同所致。详细的说明可以参考后续的第十八章登录档简介。
	如果想要知道目前已登入在系统上面的用户，透过 w 或who 来查询
	1） $ w
			# 第一行显示目前的时间、开机 (up) 多久，几个用户在系统上平均负载等；
			# 第二行只是各个项目的说明，
			# 第三行以后，每行代表一个使用者。
	2） $ who
	3） $ lastlog
			要知道每个账号的最近登入的时间，使用lastlog.lastlog会去读取/var/log/lastlog文件。
2、使用者对谈： write, mesg, wall
	write 可以直接将讯息传给接收者。
	1）write 使用者账号 [用户所在终端接口]
		$ who
		$ write user1 pts/2
			然后就可以输入信息，ctrl-d结束，user1界面就会立刻显示信息
		如果当时user1正在查资料。user1不想要接受任何讯息,user1可以执行：
		$ mesg n  #n/y
		$ mesg    #查看状态
			mesg 的功能对root传送来的讯息没有抵挡的能力。所以如果是root传送讯息，user1还是得要收下。
	2）相对于write是仅针对一个使用者，还可以『对所有系统上面的用户传送简讯(广播)。用wall 即可
		$ wall "I will shutdown my linux server..."
3、使用者邮件信箱： mail
	1）使用wall,write要等到使用者在线才能够进行，每个Linux主机上面的用户都具有一个mailbox。我们可以寄、收mailbox内的信件呢！一般来说，mailbox都会放置在/var/spool/mail里面，一个账号一个mailbox(文件)。举例来说，user1就具有/var/spool/mail/user1这个mailbox。直接使用mail即可发邮件。这个指令的用法很简单的，直接这样下达：mail -s "邮件标题" username@localhost即可！ 一般来说，如果是寄给本机上的使用者，基本上，@localhost都不用写。举例来说，我以root 寄信给user1，信件标题是『nice to meet you 』，则：
		$ mail -s "nice to meet you" user1
			#输入内容
			#最后一行输入.(一个点)结束
	2）如果写错字而按下Enter 进入次行，前一行的数据很难删除！ 使用数据流重导向可以达到取代键盘输入的要求。也就是说，可以先用vi 将信件内容编好，然后再以 mail -s "nice to meet you" vbird1 < filename 来将文件内容写入。
		eg:
			将家目录下的环境变量文件 (~/.bashrc) 寄给自己！
				mail -s "bashrc file content" user1 < ~/.bashrc
			透过管线命令直接将 ls -al ~ 的内容传给 root 自己！
				ls -al ~ | mail -s "myfile" root
	3）收信同样使用mail，输入mail即可
		在mail当中的提示字符是&。输入mail 之后，可以是否有信件，信件前面那个> 代表目前处理的信件，而在大于符号的右边那个N代表该封信件尚未读过，查看mail 内部的指令，可以在& 之后输入? ，如下：
			& ?
							mail commands
			type <message list> 	type messages
			next 					goto and type next message
			from <message list> 	give head lines of messages
			headers 				print out active message headers
			delete <message list> 	delete messages
			undelete <message list> undelete messages
			save <message list> 	folder append messages to folder and mark as saved
			copy <message list> 	folder append messages to folder without marking them
			write <message list> 	file append message texts to file, save attachments
			preserve <message list> keep incoming messages in mailbox even if saved
			Reply <message list> 	reply to message senders
			reply <message list> 	reply to message senders and all recipients
			mail 					addresses mail to specific recipients
			file 					folder change to another folder
			quit	 				quit and apply changes to folder
			exit 					quit and discard changes made to folder
			! 						shell escape
			cd <directory> 			chdir to directory or home if none given
			list 					list names of all available commands
		<message list> 指的是每封邮件的左边那个数字。几个比较常见的指令是：
			指令 	意义
			h 		列出信件标头；如果要查阅 40 封信件左右的信件标头，可以输入『 h 40 』
			d		删除后续接的信件号码，删除单封是『 d10 』，删除 20~40 封则为『 d20-40 』。 不过，这个动作要生效的话，必须要配合 q 这个指令才行(参考底下说明)！
			s 		将信件储存成文件。例如我要将第 5 封信件的内容存成 ~/mail.file:『s 5 ~/mail.file』
			x		或者输入 exit 都可以。这个是『不作任何动作离开 mail 程序』的意思。不论你刚刚做了什么操作都会无效。如果您只是查阅一下邮件，建议使用这个离开。
			q 		相对于 exit 是不动作离开， q 则会实际进行你刚刚所执行的任何动作 (尤其是删除！)	
		旧版的CentOS 在使用mail 读信后，透过q 离开始，会将已读信件移动到~/mbox 中，不过目前CentOS 7 已经不这么做。
4、CentOS 7 环境下大量建置账号的方法：
	1、一些账号相关的检查工具：
		1）pwck/grpck
			pwck 这个指令在检查/etc/passwd 这个账号配置文件内的信息，与实际的家目录是否存在等信息，还可以比对 /etc/passwd /etc/shadow 的信息是否一致，另外，如果/etc/passwd 内的数据字段错误时，会提示使用者修订。一般来说，只是利用他检查输入是否正确。
			相对应的群组检查可以使用 grpck这个指令
		2）pwconv
			这个指令主要的目的是在『将/etc/passwd 内的账号与密码，移动到/etc/shadow 当中！』早期的Unix系统当中并没有/etc/shadow 呢，所以，用户的登入密码早期是在/etc/passwd 的第二栏，后来为了系统安全，才将密码数据移动到/etc/shadow 内的。使用pwconv 后，可以：
				1-比对/etc/passwd 及/etc/shadow，若/etc/passwd内存在的账号并没有对应的/etc/shadow密码时，则pwconv 会去/etc/login.defs 取用相关的密码数据，并建立该账号的/etc/shadow 数据；
				2-若/etc/passwd内存在加密后的密码数据时，则pwconv会将该密码栏移动到/etc/shadow内，并将原本的/etc/passwd内相对应的密码栏变成x
			一般来说，如果您正常使用useradd 增加使用者时，使用pwconv并不会有任何的动作，因为/etc/passwd与/etc/shadow并不会有上述两点问题啊。不过，如果手动设定账号，这个pwconv就很重要！
		3）pwunconv
			相对于 pwconv，pwunconv则是将/etc/shadow 内的密码栏数据写回/etc/passwd 当中，并且删除/etc/shadow文件。这个指令最好不要使用！因为他会将你的 /etc/shadow 删除。如果你忘记备份，又不会使用pwconv的话，很严重！
		4）chpasswd
			chpasswd可以『读入未加密前的密码，并且经过加密后，将加密后的密码写入/etc/shadow 当中。』这个指令很常被使用在大量建置账号的情况中喔！他可以由 Standard input读入数据，每笔数据的格式是『username:password 』。举例来说，用户账号为user1 ，需要更新密码(update) ，假如他的密码是abcdefg 的，可以这样做：
				$ echo "user1:abcdefg" | chpasswd
			预设的情况中， chpasswd会去读取/etc/login.defs文件内的加密机制，CentOS 7.x 用的是SHA512，因此chpasswd就预设会使用SHA512来加密！如果想要使用不同的加密机制，那就要使用-c 以及-e 等方式来处理！ 不过从CentOS 5.x开始之后，passwd 已经默认加入了--stdin 的选项，因此这个chpasswd 就变得英雄无用武之地了！不过，在其他非Red Hat 衍生的Linux 版本中，或许还是可以参考这个指令功能来大量建置账号！
	2、大量建置账号模板(适用passwd --stdin 选项)
		见accountadd.sh


