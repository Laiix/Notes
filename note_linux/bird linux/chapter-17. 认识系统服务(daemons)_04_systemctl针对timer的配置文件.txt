1、systemctl 针对timer 的配置文件
	服务想要定期执行，或者是开机后执行，或者是什么服务启动多久后执行等等的。在过去，大概都是使用crond这个服务来定期处理，不过，既然现在有一直常驻在内存当中的systemd，加上这systemd有个协力服务，名为timers.target,可以协助定期处理各种任务！那么，除了crond 之外，如何使用systemd 内建的time 来处理各种任务:
	1-systemd.timer的优势
		在archlinux的官网wiki上面有提到，为啥要使用systemd.timer呢？
			由于所有的systemd 的服务产生的信息都会被纪录(log)，因此比crond 在debug 上面要更清楚方便的多；
 			各项timer 的工作可以跟systemd 的服务相结合；
 			各项timer 的工作可以跟control group (cgroup，用来取代/etc/secure/limit.conf 的功能) 结合，来限制该工作的资源利用
		弱点：例如 systemd 的timer 并没有email 通知的功能(除非自己写一个)，也没有类似anacron 的一段时间内的随机取样功能(random_delay)， 不过，总体来说，还是挺不错的！此外，相对于crond 最小的单位到分， systemd 是可以到秒甚至是毫秒的单位！
	2-任务需求
		基本上，想要使用 systemd 的timer 功能，你必须要有几个要件：
 			系统的timer.target 一定要启动
 			要有个sname.service 的服务存在(sname 是你自己指定的名称)
 			要有个sname.timer 的时间启动服务存在
	3-sname.timer 的设定值
		你可以到/etc/systemd/system底下去建立这个*.timer档，那这个文件的内容要项有哪些东西呢？基本设定主要有底下这些： (man systemd.timer & man systemd.time)
		OnActiveSec 
			当 timers.target 启动多久之后才执行这只 unit
		OnBootSec
			当开机完成后多久之后才执行
		OnStartupSec 
			当 systemd 第一次启动之后过多久才执行
		OnUnitActiveSec 
			这个 timer 配置文件所管理的那个 unit 服务在最后一次启动后，隔多久后再执行一次的意思
		OnUnitInactiveSec 
			这个 timer 配置文件所管理的那个 unit 服务在最后一次停止后，隔多久再执行一次的意思。
		OnCalendar 
			使用实际时间 (非循环时间) 的方式来启动服务的意思！至于时间的格式后续再来谈。
		Unit
			一般来说不太需要设定，因此如同上面刚刚提到的，基本上我们设定都是 sname.server+sname.timer，那如果你的 sname 并不相同时，那在 .timer 的文件中， 就得要指定是哪一个service unit
		Persistent
			当使用 OnCalendar 的设定时，指定该功能要不要持续进行的意思。通常是设定为 yes ，比较能够满足类似 anacron 的功能喔！
	4-使用于OnCalendar 的时间
		
		
		