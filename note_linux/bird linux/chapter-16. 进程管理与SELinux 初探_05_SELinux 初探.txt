从进入了 CentOS 5.x 之后的CentOS 版本中(当然包括CentOS 7)，SELinux 已经是个非常完备的核心模块了！尤其CentOS 提供了很多管理SELinux 的指令与机制， 因此在整体架构上面是单纯且容易操作管理的！所以，在没有自行开发网络服务软件以及使用其他第三方协力软件的情况下， 也就是全部使用CentOS 官方提供的软件来使用我们服务器的情况下，建议大家不要关闭SELinux 吧！
1、什么是SELinux
	什么是 SELinux 呢？其实他是『Security Enhanced Linux 』的缩写，字面上的意义就是安全强化的Linux 之意！那么所谓的『安全强化』是强化哪个部分？ 是网络资安还是权限管理？
	1-当初设计的目标：避免资源的误用
		SELinux 是由美国国家安全局(NSA) 开发的，目的是因为很多企业界发现， 通常系统出现问题的原因大部分都在于『内部员工的资源误用』所导致的，实际由外部发动的攻击反而没有这么严重。那么什么是『员工资源误用』呢？举例来说，如果有个不是很懂系统的系统管理员为了自己设定的方便，将网页所在目录/var/www/html/ 的权限设定为drwxrwxrwx 时，你觉得会有什么事情发生？
		现在我们知道所有的系统资源都是透过进程来进行存取的，那么 /var/www/html/ 如果设定为777 ，代表所有进程均可对该目录存取，万一你真的有启动WWW 服务器软件，那么该软件所触发的进程将可以写入该目录， 而该进程却是对整个 Internet 提供服务的！只要有心人接触到这支进程，而且该进程刚好又有提供用户进行写入的功能， 那么外部的人很可能就会对你的系统写入些莫名其妙的东西
		为了控管这方面的权限与进程的问题，所以美国国家安全局就着手处理操作系统这方面的控管。 由于Linux 是自由软件，程序代码都是公开的，因此她们便使用Linux 来作为研究的目标， 最后更将研究的结果整合到Linux 核心里面去，那就是SELinux 啦！所以说， SELinux 是整合到核心的一个模块喔！ 更多的 SELinux 相关说明可以参考：
			http://www.nsa.gov/research/selinux/
		这也就是说：其实SELinux 是在进行进程、文件等细部权限设定依据的一个核心模块！ 由于启动网络服务的也是进程，因此刚好也能够控制网络服务能否存取系统资源的一道关卡！ 所以，在讲到SELinux 对系统的访问控制之前，我们得先来回顾一下之前谈到的系统文件权限与用户之间的关系。因为先谈完这个你才会知道为何需要 SELinux 的啦！
	2-传统的文件权限与账号关系：自主式访问控制, DAC
		我们第十三章的内容，知道系统的账号主要分为系统管理员(root) 与一般用户，而这两种身份能否使用系统上面的文件资源则与rwx 的权限设定有关。不过你要注意的是，各种权限设定对root 是无效的。因此，当某个进程想要对文件进行存取时， 系统就会根据该进程的拥有者/群组，并比对文件的权限，若通过权限检查，就可以存取该文件了。
		这种存取文件系统的方式被称为『自主式访问控制 (Discretionary Access Control, DAC)』，基本上，就是依据进程的拥有者与文件资源的rwx 权限来决定有无存取的能力。不过这种 DAC 的访问控制有几个困扰，那就是：
			root 具有最高的权限：如果不小心某支进程被有心人取得， 且该进程属于root 的权限，那么这支进程就可以在系统上进行任何资源的存取！
			使用者可以取得进程来变更文件资源的访问权限：如果你不小心将某个目录的权限设定为777 ，由于对任何人的权限会变成rwx ，因此该目录就会被任何人所任意存取！
		这些问题是非常严重的！尤其是当你的系统是被某些漫不经心的系统管理员所掌控时！她们甚至觉得目录权限调为777 也没有什么了不起的
	3-以政策规则订定特定进程读取特定文件：委任式访问控制, MAC
		现在我们知道 DAC 的困扰就是当使用者取得进程后，他可以藉由这支进程与自己预设的权限来处理他自己的文件资源。万一这个用户对 Linux 系统不熟，那就很可能会有资源误用的问题产生。为了避免DAC 容易发生的问题，因此SELinux 导入了委任式访问控制(Mandatory Access Control,MAC) 的方法！
		委任式访问控制 (MAC) 可以针对特定的进程与特定的文件资源来进行权限的控管！ 也就是说，即使你是root ，那么在使用不同的进程时，你所能取得的权限并不一定是root ， 而得要看当时该进程的设定而定。如此一来，我们针对控制的『主体』变成了『进程』而不是使用者！ 此外，这个主体进程也不能任意使用系统文件资源，因为每个文件资源也有针对该主体进程设定可取用的权限！ 如此一来，控件目就细的多了！但整个系统进程那么多、文件那么多，一项一项控制可就没完没了！ 所以 SELinux 也提供一些预设的政策(Policy) ，并在该政策内提供多个规则(rule) ，让你可以选择是否启用该控制规则！
		在委任式访问控制的设定下，我们的进程能够活动的空间就变小了！举例来说， WWW 服务器软件的达成进程为httpd 这支程序， 而默认情况下， httpd 仅能在/var/www/ 这个目录底下存取文件，如果httpd 这个进程想要到其他目录去存取数据时， 除了规则设定要开放外，目标目录也得要设成httpd 可读取的模式(type) 才行！限制非常多！ 所以，即使不小心httpd 被cracker 取得了控制权，他也无权浏览/etc/shadow 等重要的配置文件喔！